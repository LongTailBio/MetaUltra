import pandas as pd


def all_input(wildcards):
	inp = []
        
	if 'SHORTBRED' in config:
		inp += expand('{sample}'+config['SHORTBRED']['EXT'], sample=config['SAMPLES'].keys())
                
	if 'METAPHLAN2' in config:
		inp += expand('{sample}'+config['METAPHLAN2']['EXT'], sample=config['SAMPLES'].keys())

	return inp

rule all:
	input:
		all_input

# ShortBred

def shortbredGetReads(wildcards):
	return ' '.join(config['SAMPLES'][wildcards.sample])

rule shortbred_single:
	input:
            f1 = '{sample}' + config['READ_1_EXT'],
            f2 = '{sample}' + config['READ_2_EXT']
	output: '{sample}'+config['SHORTBRED']['EXT']
	params:
		ref=config['SHORTBRED']['DB'],
		shortbred=config['SHORTBRED']['EXC'],
		tmp=config['TMP_DIR'],
                job_name=config['JOB_NAME_PREFIX'] + 'shortbred_single',
	threads: int(config['SHORTBRED']['THREADS'])
        resources:
            time=int(config['SHORTBRED']['TIME']),
            n_gb_ram=int(config['SHORTBRED']['RAM'])
	shell:
		'{params.shortbred} --markers {params.ref} --wgs {input.f1} {input.f2}'
		'--results {output} --threads {threads} --tmp {params.tmp}'

# MetaPhlAn2

def metaphlan2GetReads(wildcards):
        return ','.join( config['SAMPLES'][wildcards.sample])

rule metaphlan2_single:
	input:
        	f1 = '{sample}' + config['READ_1_EXT'],
        	f2 = '{sample}' + config['READ_2_EXT'],
	output: '{sample}' + config['METAPHLAN2']['EXT']
	threads: int(config['METAPHLAN2']['THREADS'])
	params:
        	metaphlan2=config['METAPHLAN2']['EXC'],
                job_name=config['JOB_NAME_PREFIX'] + 'metaphlan2_single',
	resources:
            	time=int(config['SHORTBRED']['TIME']),
		n_gb_ram=int(config['SHORTBRED']['RAM'])

	shell:
		'{params.metaphlan2} {input.f1},{input.f2} --nproc {threads} > {output}'


            
# HUMANN
'''
rule humann_blastx:
    input:
    output: '{sample}.humann.blasttab.gz'
    params:
        db=config['HUMANN']['DB']
    shell:
        'blastx | gzip > {output}'
'''
