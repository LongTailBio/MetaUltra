import pandas as pd
import sys
import os.path
import os

paired = config['PAIRED_END'].lower() in ['y', 'true', 'yes', 't']
if not paired:
	sys.stderr.write('Running in Single Ended Mode\n')
else:
	sys.stderr.write('Running in Paired Ended Mode\n')
	
if not os.path.isdir(config['OUTPUT_DIR']):
	os.mkdir(config['OUTPUT_DIR'])

onsuccess:
	sys.stderr.write('MUP complete\n')

onerror:
	sys.stderr.write('An error occurred.')

localrules: clark_make_sample_and_result_files, minhash_sketch_single, mash_dists_single

def getReads(wildcards):
	reads = []
	reads.append(config['SAMPLE_DIR'] + wildcards.sample + config['READ_1_EXT'])
	if paired:
		reads.append(config['SAMPLE_DIR'] + wildcards.sample + config['READ_2_EXT'])
	return reads

def getCleanReads(wildcards):
	reads = []
	reads.append(config['OUTPUT_DIR']+ wildcards.sample+'_nothost.fastq.gz')
	return reads


def all_input(wildcards):
	tools = config['TOOLS_TO_RUN']
	inp = []
	if 'SHORTBRED' in tools:
		inp += expand(config['OUTPUT_DIR']+'{sample}.{db_name}'+config['SHORTBRED']['EXT'], sample=config['SAMPLES'].keys(), db_name=config['SHORTBRED']['DBS'].keys())
	return inp


# ShortBred
rule shortbred_single_sample:
	input:
		reads = getReads
	output: config['OUTPUT_DIR']+'{sample}.{db_name}'+config['SHORTBRED']['EXT']
	params:
		ref=lambda wildcards: config['SHORTBRED']['DBS'][wildcards.db_name],
		shortbred=config['SHORTBRED']['EXC'],
		tmp=config['TMP_DIR'],
		job_name=config['JOB_NAME_PREFIX'] + 'shortbred_single_sample',
	threads: int(config['SHORTBRED']['THREADS'])
	version: config['SHORTBRED']['VERSION']
	resources:
		time=int(config['SHORTBRED']['TIME']),
		n_gb_ram=int(config['SHORTBRED']['RAM'])
	run:
		if paired:
			cmd = '{params.shortbred} --markers {params.ref} --wgs {input.reads[0]} {input.reads[1]} '
			cmd += '--results {output} --threads {threads} --tmp {params.tmp}'
		else:
			cmd = '{params.shortbred} --markers {params.ref} --wgs {input.reads[0]} '
			cmd += '--results {output} --threads {threads} --tmp {params.tmp}'
		shell(cmd)

