
def count_classified_output(tools, wildcards):
	inp = []
	if 'COUNT_CLASSIFIED' in tools:
		inp += expand( config['OUTPUT_DIR']+'{sample}.reads_classified.json', sample=config['SAMPLES'].keys())
	return inp

output_builders.append( count_classified_output)

rule count_classified_reads_single:
	input:
		host=config['OUTPUT_DIR'] + '{sample}_host.fastq.gz',
		nothost=config['OUTPUT_DIR'] + '{sample}_nothost.fastq.gz',
		krakenmpa=config['OUTPUT_DIR']+'{sample}' + config['KRAKEN']['MPA_EXT']
	output:
		main=config['OUTPUT_DIR']+'{sample}.reads_classified.json'
	params:
		script=config['COUNT_CLASSIFIED']['EXC'],
		job_name=config['JOB_NAME_PREFIX']+'count_classified_reads_single'
	resources:
		time=1,
		n_gb_ram=2
	threads: 1
	shell:
		'{params.script} {input.host} {input.nothost} {input.krakenmpa} > {output.main}'

