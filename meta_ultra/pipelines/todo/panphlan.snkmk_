
def panphlan_output(wildcards):
	tools = config['TOOLS_TO_RUN']
	inp = []
	if 'PANPHLAN' in tools:
		inp += expand('{sample}.{species}.panphlan.flag', sample=config['SAMPLES'], species=config['PANPHLAN']['DBS'])
	return inp

output_builders.append( panphlan_output)

# PanPhlAn
rule panphlan_make_bam:
	input:
		reads = getReads
	output:
		main = temp(config['OUTPUT_DIR']+'{sample}.{species}.bt2.bam')
	threads: int( config['PANPHLAN']['THREADS'])
	params:
		job_name=config['JOB_NAME_PREFIX'] + 'panphlan_make_bam',
		bt2 = config['BOWTIE2'],
		samtools = config['SAMTOOLS'],
		bt2_index = config['PANPHLAN']['DB_DIR'] + '{species}'
	resources:
		time=int(config['PANPHLAN']['BT2_TIME']),
		n_gb_ram=int(config['PANPHLAN']['BT2_RAM'])
	run:
		if paired:
			cmd = '{params.bt2} --threads {threads} -x {params.bt2_index} -1 {input.reads[0]} -2 {input.reads[1]} | '

		else:
			cmd = '{params.bt2} --threads {threads} -x {params.bt2_index} -U {input.reads[0]} | '
			cmd += '{params.samtools} view -F 4 -b > {output.main} '
		shell(cmd)

rule panphlan_sort_bam:
	input:
		bam = config['OUTPUT_DIR']+'{sample}.{species}.bt2.bam'
	output:
		main = temp( config['OUTPUT_DIR']+'{sample}.{species}.sorted.bt2.bam')
	threads: 1
	params:
		job_name=config['JOB_NAME_PREFIX'] + 'panphlan_sort_bam',
		samtools = config['SAMTOOLS']
	resources:
		time=1,
		n_gb_ram=4
	shell:
		'{params.samtools} sort {input.bam} > {output.main}'


rule panphlan_index_bam:
	input:
		bam = config['OUTPUT_DIR']+'{sample}.{species}.sorted.bt2.bam'
	output:
		main = temp( config['OUTPUT_DIR']+'{sample}.{species}.sorted.bt2.bam.bai')
	threads: 1
	params:
		job_name=config['JOB_NAME_PREFIX'] + 'panphlan_index_bam',
		samtools = config['SAMTOOLS']
	resources:
		time=1,
		n_gb_ram=4
	shell:
		'{params.samtools} index {input.bam}'

		
rule panphlan_map_single:
	input:
		bam = config['OUTPUT_DIR']+'{sample}.{species}.sorted.bt2.bam',
		bai = config['OUTPUT_DIR']+'{sample}.{species}.sorted.bt2.bam.bai'
	output:
		flag='{sample}.{species}.panphlan.flag'
	threads: int( config['PANPHLAN']['THREADS'])
	params:
		job_name=config['JOB_NAME_PREFIX'] + 'panphlan_map_single',
		p_map = config['PANPHLAN']['EXC'],
		clade = '{species}',
		bt2_indices = config['PANPHLAN']['DB_DIR'],
		main_out = config['OUTPUT_DIR']+'{sample}.{species}' + config['PANPHLAN']['EXT'] 
	resources:
		time=int(config['PANPHLAN']['TIME']),
		n_gb_ram=int(config['PANPHLAN']['RAM'])
	shell:
		'{params.p_map} -p {threads} -c {params.clade} -i {input.bam}  -o {params.main_out} --i_bowtie2_indexes {params.bt2_indices} '
		' && touch {output.flag}'



