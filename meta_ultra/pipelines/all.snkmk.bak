import sys
import os.path
import os
from snakemake_utils import *


init(config)


def all_input(wildcards):
	tools = config['TOOLS_TO_RUN']
	inp = []
	if 'SHORTBRED' in tools:
		inp += expand(config['OUTPUT_DIR']+'{sample}.{db_name}'+config['SHORTBRED']['EXT'],
			      sample=config['SAMPLES'].keys(),
			      db_name=config['SHORTBRED']['DBS'].keys()
		)
	if 'METAPHLAN2' in tools:
		inp += expand(config['OUTPUT_DIR']+'{sample}'+config['METAPHLAN2']['EXT'],
			      sample=config['SAMPLES'].keys()
		)
	if 'PANPHLAN' in tools:
		inp += expand('{sample}.{species}.panphlan.flag',
			      sample=config['SAMPLES'],
			      species=config['PANPHLAN']['DBS']
		)
	if 'MICROBE_CENSUS' in tools:
		inp += expand(config['OUTPUT_DIR']+'{sample}'+config['MICROBE_CENSUS']['EXT'],
			      sample=config['SAMPLES'].keys()
		)
	if 'KRAKEN' in tools:
		inp += expand(config['OUTPUT_DIR']+'{sample}'+config['KRAKEN']['MPA_EXT'],
			      sample=config['SAMPLES'].keys()
		)
	if 'KNEADDATA' in tools:
		inp += expand(config['OUTPUT_DIR'] + '{sample}_host.fastq.gz',
			      sample=config['SAMPLES']
		)
		inp += expand(config['OUTPUT_DIR'] + '{sample}_nothost.fastq.gz',
			      sample=config['SAMPLES']
		)
	if 'COUNT_CLASSIFIED' in tools:
		inp += expand( config['OUTPUT_DIR']+'{sample}.reads_classified.json',
			       sample=config['SAMPLES'].keys()
		)
	if 'MASH' in tools:
		inp += expand( config['OUTPUT_DIR']+'{sample}.hmp_sites.json',
			       sample=config['SAMPLES'].keys()
		)
	return inp

include: 'shortbred.snkmk'

rule all:
	input:
		all_input

